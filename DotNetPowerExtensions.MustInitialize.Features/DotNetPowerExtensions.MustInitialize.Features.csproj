<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>

    <IsAnalyzerProject>true</IsAnalyzerProject>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="IgnoresAccessChecksToGenerator" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Features" PrivateAssets="all" />

    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.CSharp" />
    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.Features" />
    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.CSharp.Features" />
    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.CSharp.EditorFeatures" />
    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.Scripting" />
    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.CSharp.Scripting" />
    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.Workspaces" />
    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.CSharp.Workspaces" />
    <InternalsAssemblyName Include="Microsoft.CodeAnalysis.LanguageServer.Protocol" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DotNetPowerExtensions.MustInitialize.Analyzers\DotNetPowerExtensions.MustInitialize.Analyzers.csproj" />
  </ItemGroup>

  <!-- Since we do InternalsAssemblyName we have to do it after IgnoresAccessChecksToGenerator -->
  <Target Name="AddCustomAliases" AfterTargets="IgnoresAccessChecksToGenerator">
    <ItemGroup>
      <ReferencePath Condition="'%(FileName)' == 'Microsoft.CodeAnalysis.Features'">
        <Aliases>Features</Aliases>
      </ReferencePath>
      <ReferencePath Condition="'%(FileName)' == 'Microsoft.CodeAnalysis.Workspaces'">
        <Aliases>Workspaces</Aliases>
      </ReferencePath>
    </ItemGroup>
  </Target>

</Project>
